<?xml version="1.0" encoding="UTF-8"?><testrun name="SolveEqTestParamFile" project="cs3346Assignment1" tests="9" started="9" failures="0" errors="0" ignored="0">
  <testsuite name="quadEq.SolveEqTestParamFile" time="0.083" displayname="SolveEqTestParamFile" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]">
    <testsuite name="testSolveEq(quadEq.SolveEqTestParamFile)" time="0.083" displayname="testSolveEq(String, String, String, String, String, String, String)" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]">
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.083" dynamicTest="true" displayname="[1] 0, 0, 0, , , All real numbers are roots, Test the case of (ALL_ROOTS)." parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.018" dynamicTest="true" displayname="[2] 0, 0, 1, , , No real root, Test the case of (NO_ROOT) when c=0." parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.005" dynamicTest="true" displayname="[3] 0, 1, 0, 0, , One real root only, Test with the previous test to compare different permutation" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.004" dynamicTest="true" displayname="[4] 0, 2.6, 5.2, -2, , One real root only, Test the case of (ONE_ROOT) when a=0 and b,c are double value" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.025" dynamicTest="true" displayname="[5] 0, 5.2, 2.6, -0.5, , One real root only, with the previous test to compare different permutation" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#5]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.0" dynamicTest="true" displayname="[6] 2, 1, 3, , , No real root, Test the case of (NO_ROOT) when a!=0" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#6]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.005" dynamicTest="true" displayname="[7] 1, 3, 2, -2, -1, Two distinct real roots, Test with the previous test to compare different permutation" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#7]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.015" dynamicTest="true" displayname="[8] 1, 6, 9, -3, , One real root only, Test the case of (ONE_ROOT) when a=0" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#8]"/>
      <testcase name="testSolveEq" classname="quadEq.SolveEqTestParamFile" time="0.0" dynamicTest="true" displayname="[9] 9, 6, 1, -0.3333333, , One real root only, Test the case with the previous test to compare different permutation" parameters="java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:quadEq.SolveEqTestParamFile]/[test-template:testSolveEq(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#9]"/>
    </testsuite>
  </testsuite>
</testrun>
